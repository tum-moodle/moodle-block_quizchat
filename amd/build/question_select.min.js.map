{"version":3,"file":"question_select.min.js","sources":["../src/question_select.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JavaScript library for the block_quizchat plugin.\n *\n * @package\n * @copyright 2023, TUM ProLehre | Medien und Didaktik <moodle@tum.de>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport * as Notification from 'core/notification';\nimport {call as fetchMany} from 'core/ajax';\nimport $ from 'jquery';\nimport {quizchat_student_question_id,lang_strings} from 'block_quizchat/master';\n\nexport const list = (userid,qcid,query) => {\n    return fetchMany([{\n        methodname: 'block_quizchat_get_questionslot',\n        args: {\n            senderid: userid,\n            quizchatid: qcid,\n            partial_name: query,\n            general_string: lang_strings['student_question_general']\n        }\n    }])[0];\n};\n\nexport const processResults = (selector, results) => {\n    var options = [];\n        let questions = results.questions;\n        let option_value = 0;\n        let nametag= '';\n        questions.forEach(question => {\n            let container = document.createElement(\"div\");\n            if(question.questionid == 0) {//if questionid = 0, general question case\n                nametag='<div class=\"questions-menu\" title=\"' + question.questionsummary + '\">'\n                + question.questionsummary + '</div>';\n                container.innerHTML = nametag;\n                container.title = question.questionsummary;\n                option_value = question.questionattemptid;\n            } else {//other questions\n                //if the logged-in user has send-all cap(if teacher), innerHTML =  question.questionname\n                //if student, innerHTML =  question.studentquestionorder\n                if(question.questionid == quizchat_student_question_id) {//student\n                    nametag='<div class=\"questions-menu\" title=\"' + question.studentquestionorder + '\">'\n                    + question.studentquestionorder + '</div>';\n                    container.innerHTML = nametag;\n                    container.title = question.studentquestionorder;\n                    option_value = question.questionattemptid;\n                }\n                else //teacher\n                {\n                    nametag='<div class=\"questions-menu\" title=\"' + question.questionname + '\">' + question.questionname + '</div>';\n                    container.innerHTML = nametag;\n                    container.title = question.questionname;\n                    option_value = question.questionid;\n                }\n            }\n            container.className = 'divcontainer-questions';\n            options.push({\n                value: option_value,\n                label: container\n            });\n    });\n    return options;\n};\n\nexport const transport = (selector, query, callback) => {\n    let userid = parseInt($('[name=\"block_quizchat_userid\"]').val());\n    let qcid = parseInt($('[name=\"block_quizchat_quizchatid\"]').val());\n    list(userid,qcid,query)\n        .then(callback).catch(Notification.exception);\n};\n"],"names":["list","userid","qcid","query","methodname","args","senderid","quizchatid","partial_name","general_string","lang_strings","selector","results","options","questions","option_value","nametag","forEach","question","container","document","createElement","questionid","questionsummary","innerHTML","title","questionattemptid","quizchat_student_question_id","studentquestionorder","questionname","className","push","value","label","callback","parseInt","val","then","catch","Notification","exception"],"mappings":";;;;;;;kFA2BaA,KAAO,CAACC,OAAOC,KAAKC,SACtB,cAAU,CAAC,CACdC,WAAY,kCACZC,KAAM,CACFC,SAAUL,OACVM,WAAYL,KACZM,aAAcL,MACdM,eAAgBC,qBAAA,6BAEpB,8CAGsB,CAACC,SAAUC,eACjCC,QAAU,OACNC,UAAYF,QAAQE,UACpBC,aAAe,EACfC,QAAS,UACbF,UAAUG,SAAQC,eACVC,UAAYC,SAASC,cAAc,OACb,GAAvBH,SAASI,YACRN,QAAQ,sCAAwCE,SAASK,gBAAkB,KACzEL,SAASK,gBAAkB,SAC7BJ,UAAUK,UAAYR,QACtBG,UAAUM,MAAQP,SAASK,gBAC3BR,aAAeG,SAASQ,mBAIrBR,SAASI,YAAcK,sCACtBX,QAAQ,sCAAwCE,SAASU,qBAAuB,KAC9EV,SAASU,qBAAuB,SAClCT,UAAUK,UAAYR,QACtBG,UAAUM,MAAQP,SAASU,qBAC3Bb,aAAeG,SAASQ,oBAIxBV,QAAQ,sCAAwCE,SAASW,aAAe,KAAOX,SAASW,aAAe,SACvGV,UAAUK,UAAYR,QACtBG,UAAUM,MAAQP,SAASW,aAC3Bd,aAAeG,SAASI,YAGhCH,UAAUW,UAAY,yBACtBjB,QAAQkB,KAAK,CACTC,MAAOjB,aACPkB,MAAOd,eAGZN,4BAGc,CAACF,SAAUR,MAAO+B,gBACnCjC,OAASkC,UAAS,mBAAE,kCAAkCC,OACtDlC,KAAOiC,UAAS,mBAAE,sCAAsCC,OAC5DpC,KAAKC,OAAOC,KAAKC,OACZkC,KAAKH,UAAUI,MAAMC,aAAaC"}